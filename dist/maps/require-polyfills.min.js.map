{"version":3,"file":"../require-polyfills.min.js","sources":["require-polyfills.js"],"sourcesContent":["/**\n * Auto load polyfills for features missing in the browser\n */\n(function () {\n    \n    var _hasInitialized = false;\n\n    /**\n     * Declare polyfills with function that returns\n     * `true` if the feature is supported by the current browser and\n     * `false` if the feature is not supported and needs to be polyfilled\n     */\n    var _polyfills = {\n        'polyfill-bind': function(){ return !! Function.bind; },\n        'polyfill-classList': function(){ return 'classList' in document.createElement('_'); },\n        'polyfill-matches': function(){ return !! Element.prototype.matches; }, // Needed for `closest` polyfill\n        'polyfill-closest': function(){ return !! Element.prototype.closest; },\n        'polyfill-CustomEvents': function(){ return typeof window.CustomEvent === \"function\" },\n        'polyfill-matchMedia': function(){ return typeof window.matchMedia === \"function\" },\n        'polyfill-ObjectEntries': function(){ return !! Object.entries; },\n        'polyfill-Promise': function(){ return true; },\n        'polyfill-requestAnimationFrame': function(){ return true; },\n    };\n\n\n\n    /**\n     * Current Script Path\n     *\n     * Get the dir path to the currently executing script file\n     * which is always the last one in the scripts array with\n     * an [src] attr\n     */\n    var currentScriptPath = function () {\n        var scripts = document.querySelectorAll( 'script[src]' );\n        var currentScript = scripts[ scripts.length - 1 ].src;\n        var currentScriptChunks = currentScript.split( '/' );\n        var currentScriptFile = currentScriptChunks[ currentScriptChunks.length - 1 ];\n\n        return currentScript.replace( currentScriptFile, '' );\n    }\n\n\n\n    /**\n\t * Get list of declared polyfill\n\t *\n\t * @return  {Array}  List of declared polyfill ids\n\t */\n\tvar getIds = function() {\n\t\treturn Object.keys( _polyfills );\n\t};\n\n\n\n    /**\n     * Auto load polyfills for missing features in the browser\n     */\n    var autoLoad = function() {\n        // Bail if already executed or require-bundle not loaded\n        if ( _hasInitialized || ! window.RequireBundle ) { return; }\n\n        // Register Bundles\n        getIds().forEach( function( polyfillId ) {\n            RequireBundle.register( polyfillId, [ currentScriptPath() + '' + polyfillId + '.min.js' ] );\n        } );\n\n        // Load bundles\n        getIds().forEach( function( polyfillId ) {\n            if ( ! _polyfills[ polyfillId ]() ) {\n                RequireBundle.require( polyfillId );\n            }\n        } );\n    }\n  \n\n\n    // Execute immediatelly\n    autoLoad();\n\n  })();\n  "],"names":["getIds","Object","keys","_polyfills","polyfill-bind","Function","bind","polyfill-classList","document","createElement","polyfill-matches","Element","prototype","matches","polyfill-closest","closest","polyfill-CustomEvents","window","CustomEvent","polyfill-matchMedia","matchMedia","polyfill-ObjectEntries","entries","polyfill-Promise","polyfill-requestAnimationFrame","RequireBundle","forEach","polyfillId","scripts","currentScript","currentScriptChunks","currentScriptFile","register","querySelectorAll","length","src","split","replace","require"],"mappings":"CAGA,WA8Cc,SAATA,IACH,OAAOC,OAAOC,KAAMC,GA7ClB,IAOIA,EAAa,CACbC,gBAAiB,WAAY,QAAUC,SAASC,MAChDC,qBAAsB,WAAY,MAAO,cAAeC,SAASC,cAAc,MAC/EC,mBAAoB,WAAY,QAAUC,QAAQC,UAAUC,SAC5DC,mBAAoB,WAAY,QAAUH,QAAQC,UAAUG,SAC5DC,wBAAyB,WAAY,MAAqC,mBAAvBC,OAAOC,aAC1DC,sBAAuB,WAAY,MAAoC,mBAAtBF,OAAOG,YACxDC,yBAA0B,WAAY,QAAUpB,OAAOqB,SACvDC,mBAAoB,WAAY,OAAO,GACvCC,iCAAkC,WAAY,OAAO,IAuC3BP,OAAOQ,gBAGjCzB,IAAS0B,QAAS,SAAUC,GA9BR,IAChBC,EACAC,EACAC,EACAC,EA2BAN,cAAcO,SAAUL,EAAY,EA9BpCC,EAAUpB,SAASyB,iBAAkB,eACrCJ,EAAgBD,EAASA,EAAQM,OAAS,GAAIC,IAC9CL,EAAsBD,EAAcO,MAAO,KAC3CL,EAAoBD,EAAqBA,EAAoBI,OAAS,GAEnEL,EAAcQ,QAASN,EAAmB,IAyBe,GAAKJ,EAAa,eAIlF3B,IAAS0B,QAAS,SAAUC,GACjBxB,EAAYwB,MACfF,cAAca,QAASX,MAnEvC"}